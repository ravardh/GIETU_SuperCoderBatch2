# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hqRifbynjqf43C7JvqNlvfunYkw9i218
"""

class Node:
  def __init__(self,data):
    self.data=data
    self.left=None
    self.right=None

def maxht(node):
  if(node==None):
    return 0
  lht=maxht(node.left)
  rht=maxht(node.right)
  if(lht>rht):
    return lht+1
  else:
    return rht+1

def childNode(root):
  s1=[]
  s2=[]
  s1.append(root)
  while(len(s1)!=0):
    curr=s1.pop()
    if curr.left:
      s1.append(curr.left)
    if curr.right:
      s1.append(curr.right)
    if not curr.left and not curr.right:
      s2.append(curr)

  while(len(s2)!=0):
    print(s2.pop().data,end=" ")

root=Node(10)
root.left=Node(20)
root.right=Node(30)
root.left.left=Node(40)
root.left.right=Node(50)
root.right.left=Node(60)
root.right.right=Node(70)
root.left.left.left=Node(80)

print("Maximum height is %d" % maxht(root))
childNode(root)











class Node:
  def __init__(self,data):
    self.data=data
    self.left=None
    self.right=None
    self.key=0

def TopView(root):
  if(root==None):
    return
  q=[]
  m=dict()
  key=0
  root.key=key

  q.append(root)
  while(len(q)):
    root=q[0]
    key=root.key

    if key not in m:
      m[key]=root.data

    if(root.left):
      root.left.key=key-1
      q.append(root.left)

    if(root.right):
      root.right.key=key+1
      q.append(root.right)

    q.pop(0)
  for i in sorted(m):
    print(m[i],end=" ")


root=Node(10)
root.left=Node(20)
root.right=Node(30)
root.left.left=Node(40)
root.left.right=Node(50)
root.right.left=Node(60)
root.right.right=Node(70)

TopView(root)
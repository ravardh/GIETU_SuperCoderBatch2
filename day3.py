# -*- coding: utf-8 -*-
"""Day3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JcX8LFwoaT9IUDe36VbNFpHIJrI3BX_3
"""

#KMP Algorithm


def KMPSearch(pat, data):
	M = len(pat)
	N = len(data)

	lps = [0]*M
	j = 0

	LPS(pat, M, lps)

	i = 0
	while (N - i) >= (M - j):
		if pat[j] == data[i]:
			i += 1
			j += 1

		if j == M:
			print("Found pattern at index " + str(i-j))
			j = lps[j-1]

		elif i < N and pat[j] != data[i]:
			if j != 0:
				j = lps[j-1]
			else:
				i += 1



def LPS(pat, M, lps):
	len = 0

	lps[0] = 0
	i = 1


	while i < M:
		if pat[i] == pat[len]:
			len += 1
			lps[i] = len
			i += 1
		else:
			if len != 0:
				len = lps[len-1]
			else:
				lps[i] = 0
				i += 1


# Driver code
if __name__== '__main__':
	data = "ABAABABCABABABCAABABCABAC"
	pat = "ABABC"
	KMPSearch(pat, data)

class node:
    def __init__(self, data=None):
        self.data = data
        self.next = None

newNode = node(1)
start = newNode

start.next = node(2)
start.next.next = node(3)
start.next.next.next = node(4)
start.next.next.next.next = node(5)

temp = start
print(temp.data)
while temp.next:
    temp = temp.next
    print(temp.data)

n1 = node(0)
n1.next = start
start = n1
print("Node added to the beginning")

temp = start
print(temp.data)
while temp.next:
    temp = temp.next
    print(temp.data)

n2 = node(6)
temp = start
while temp.next:
    temp = temp.next
temp.next = n2
print("Node added to the End")

temp = start
print(temp.data)
while temp.next:
    temp = temp.next
    print(temp.data)

def factorial(num):
  if(num==1):
    return 1
  return num*factorial(num-1)
num=int(input("enter the number"))
if num<0:
    print("factorial not defined for negative number")
else:
    print("factorial of ",num,"is",factorial(num))

def power(x,n):
  if n==0:
    return 1
  else:
    return x*power(x,n-1)
x1=int(input("enter the base value"))
n2=int(input("enter the exponent value"))
p=power(x1,n2)
print(p)
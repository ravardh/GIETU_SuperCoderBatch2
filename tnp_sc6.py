# -*- coding: utf-8 -*-
"""TNP_SC6

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XGsWwjnxBTfpMdq_54PwesDNaSFhb4am
"""

class Node:
	def __init__(self, data):
		self.data = data
		self.left = None
		self.right = None


def leftView_level(root, level, max_level):
	if root is None:
		return

	if (max_level[0] < level):
		print (root.data, end = " ")
		max_level[0] = level

	leftView_level(root.left, level + 1, max_level)
	leftView_level(root.right, level + 1, max_level)


def leftView(root):
	max_level = [0]
	leftView_level(root, 1, max_level)


if __name__ == '__main__':
	root = Node(10)
	root.left = Node(2)
	root.right = Node(3)
	root.left.left = Node(7)
	root.left.right = Node(8)
	root.right.right = Node(15)
	root.right.left = Node(12)
	root.right.right.left = Node(14)

	leftView(root)

class Node:
	def __init__(self, item):
		self.data = item
		self.left = None
		self.right = None

def rightViewUtil(root, level, max_level):
	if root is None:
		return
	if (max_level[0] < level):
		print(root.data,end=" ")
		max_level[0] = level
	rightViewUtil(root.right, level+1, max_level)
	rightViewUtil(root.left, level+1, max_level)


def rightView(root):
	max_level = [0]
	rightViewUtil(root, 1, max_level)
root = Node(1)
root.left = Node(2)
root.right = Node(3)
root.left.left = Node(4)
root.left.right = Node(5)
root.right.left = Node(6)
root.right.right = Node(7)
root.right.left.right = Node(8)

rightView(root)

class node:
	def __init__(self, data):
		self.left = None
		self.right = None
		self.data = data

def totalNodes(root):
	if(root == None):
		return 0
	l = totalNodes(root.left)
	r = totalNodes(root.right)

	return 1 + l + r

def newNode(data):
	Node = node(data)
	return Node
root = newNode(1)
root.left = newNode(2)
root.right = newNode(3)
root.left.left = newNode(4)
root.left.right = newNode(5)
root.right.left = newNode(9)
root.right.right = newNode(8)
root.left.left.left = newNode(6)
root.left.left.right = newNode(7)

print(totalNodes(root))
# -*- coding: utf-8 -*-
"""frac_knapsack.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GHpdpAecoJi9laWTEeCVl5CnZhUjvECS
"""

#
def fractional_knapsack(W, N, PW, PP):
    # Calculate profit density for each item
    profit_density = [(PP[i] / PW[i], PW[i], PP[i]) for i in range(N)]

    # Sort items based on profit density in descending order
    profit_density.sort(reverse=True)

    total_profit = 0
    total_weight = 0

    for density, weight, profit in profit_density:
        if total_weight + weight <= W:

            total_profit += profit
            total_weight += weight
        else:

            remaining_weight = W - total_weight
            total_profit += (density * remaining_weight)
            break

    return total_profit

# Input
W = 15
N = 4
PW = [5, 10, 10, 5]
PP = [10, 5, 5, 10]

# Output
print("Max Profit:", fractional_knapsack(W, N, PW, PP))